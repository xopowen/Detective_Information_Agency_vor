/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/animejs/lib/anime.es.js":
/*!**********************************************!*\
  !*** ./node_modules/animejs/lib/anime.es.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * anime.js v3.2.1\n * (c) 2020 Julian Garnier\n * Released under the MIT license\n * animejs.com\n */\n\n// Defaults\n\nvar defaultInstanceSettings = {\n  update: null,\n  begin: null,\n  loopBegin: null,\n  changeBegin: null,\n  change: null,\n  changeComplete: null,\n  loopComplete: null,\n  complete: null,\n  loop: 1,\n  direction: 'normal',\n  autoplay: true,\n  timelineOffset: 0\n};\n\nvar defaultTweenSettings = {\n  duration: 1000,\n  delay: 0,\n  endDelay: 0,\n  easing: 'easeOutElastic(1, .5)',\n  round: 0\n};\n\nvar validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective', 'matrix', 'matrix3d'];\n\n// Caching\n\nvar cache = {\n  CSS: {},\n  springs: {}\n};\n\n// Utils\n\nfunction minMax(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n\nfunction stringContains(str, text) {\n  return str.indexOf(text) > -1;\n}\n\nfunction applyArguments(func, args) {\n  return func.apply(null, args);\n}\n\nvar is = {\n  arr: function (a) { return Array.isArray(a); },\n  obj: function (a) { return stringContains(Object.prototype.toString.call(a), 'Object'); },\n  pth: function (a) { return is.obj(a) && a.hasOwnProperty('totalLength'); },\n  svg: function (a) { return a instanceof SVGElement; },\n  inp: function (a) { return a instanceof HTMLInputElement; },\n  dom: function (a) { return a.nodeType || is.svg(a); },\n  str: function (a) { return typeof a === 'string'; },\n  fnc: function (a) { return typeof a === 'function'; },\n  und: function (a) { return typeof a === 'undefined'; },\n  nil: function (a) { return is.und(a) || a === null; },\n  hex: function (a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a); },\n  rgb: function (a) { return /^rgb/.test(a); },\n  hsl: function (a) { return /^hsl/.test(a); },\n  col: function (a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)); },\n  key: function (a) { return !defaultInstanceSettings.hasOwnProperty(a) && !defaultTweenSettings.hasOwnProperty(a) && a !== 'targets' && a !== 'keyframes'; },\n};\n\n// Easings\n\nfunction parseEasingParameters(string) {\n  var match = /\\(([^)]+)\\)/.exec(string);\n  return match ? match[1].split(',').map(function (p) { return parseFloat(p); }) : [];\n}\n\n// Spring solver inspired by Webkit Copyright Â© 2016 Apple Inc. All rights reserved. https://webkit.org/demos/spring/spring.js\n\nfunction spring(string, duration) {\n\n  var params = parseEasingParameters(string);\n  var mass = minMax(is.und(params[0]) ? 1 : params[0], .1, 100);\n  var stiffness = minMax(is.und(params[1]) ? 100 : params[1], .1, 100);\n  var damping = minMax(is.und(params[2]) ? 10 : params[2], .1, 100);\n  var velocity =  minMax(is.und(params[3]) ? 0 : params[3], .1, 100);\n  var w0 = Math.sqrt(stiffness / mass);\n  var zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  var a = 1;\n  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n\n  function solver(t) {\n    var progress = duration ? (duration * t) / 1000 : t;\n    if (zeta < 1) {\n      progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n    } else {\n      progress = (a + b * progress) * Math.exp(-progress * w0);\n    }\n    if (t === 0 || t === 1) { return t; }\n    return 1 - progress;\n  }\n\n  function getDuration() {\n    var cached = cache.springs[string];\n    if (cached) { return cached; }\n    var frame = 1/6;\n    var elapsed = 0;\n    var rest = 0;\n    while(true) {\n      elapsed += frame;\n      if (solver(elapsed) === 1) {\n        rest++;\n        if (rest >= 16) { break; }\n      } else {\n        rest = 0;\n      }\n    }\n    var duration = elapsed * frame * 1000;\n    cache.springs[string] = duration;\n    return duration;\n  }\n\n  return duration ? solver : getDuration;\n\n}\n\n// Basic steps easing implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n\nfunction steps(steps) {\n  if ( steps === void 0 ) steps = 10;\n\n  return function (t) { return Math.ceil((minMax(t, 0.000001, 1)) * steps) * (1 / steps); };\n}\n\n// BezierEasing https://github.com/gre/bezier-easing\n\nvar bezier = (function () {\n\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 }\n  function C(aA1)      { return 3.0 * aA1 }\n\n  function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT }\n  function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX, currentT, i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) { aB = currentT; } else { aA = currentT; }\n    } while (Math.abs(currentX) > 0.0000001 && ++i < 10);\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) { return aGuessT; }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  function bezier(mX1, mY1, mX2, mY2) {\n\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { return; }\n    var sampleValues = new Float32Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n\n      var intervalStart = 0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= 0.001) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n\n    }\n\n    return function (x) {\n      if (mX1 === mY1 && mX2 === mY2) { return x; }\n      if (x === 0 || x === 1) { return x; }\n      return calcBezier(getTForX(x), mY1, mY2);\n    }\n\n  }\n\n  return bezier;\n\n})();\n\nvar penner = (function () {\n\n  // Based on jQuery UI's implemenation of easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n  var eases = { linear: function () { return function (t) { return t; }; } };\n\n  var functionEasings = {\n    Sine: function () { return function (t) { return 1 - Math.cos(t * Math.PI / 2); }; },\n    Circ: function () { return function (t) { return 1 - Math.sqrt(1 - t * t); }; },\n    Back: function () { return function (t) { return t * t * (3 * t - 2); }; },\n    Bounce: function () { return function (t) {\n      var pow2, b = 4;\n      while (t < (( pow2 = Math.pow(2, --b)) - 1) / 11) {}\n      return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow(( pow2 * 3 - 2 ) / 22 - t, 2)\n    }; },\n    Elastic: function (amplitude, period) {\n      if ( amplitude === void 0 ) amplitude = 1;\n      if ( period === void 0 ) period = .5;\n\n      var a = minMax(amplitude, 1, 10);\n      var p = minMax(period, .1, 2);\n      return function (t) {\n        return (t === 0 || t === 1) ? t : \n          -a * Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2) * Math.asin(1 / a))) * (Math.PI * 2)) / p);\n      }\n    }\n  };\n\n  var baseEasings = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n\n  baseEasings.forEach(function (name, i) {\n    functionEasings[name] = function () { return function (t) { return Math.pow(t, i + 2); }; };\n  });\n\n  Object.keys(functionEasings).forEach(function (name) {\n    var easeIn = functionEasings[name];\n    eases['easeIn' + name] = easeIn;\n    eases['easeOut' + name] = function (a, b) { return function (t) { return 1 - easeIn(a, b)(1 - t); }; };\n    eases['easeInOut' + name] = function (a, b) { return function (t) { return t < 0.5 ? easeIn(a, b)(t * 2) / 2 : \n      1 - easeIn(a, b)(t * -2 + 2) / 2; }; };\n    eases['easeOutIn' + name] = function (a, b) { return function (t) { return t < 0.5 ? (1 - easeIn(a, b)(1 - t * 2)) / 2 : \n      (easeIn(a, b)(t * 2 - 1) + 1) / 2; }; };\n  });\n\n  return eases;\n\n})();\n\nfunction parseEasings(easing, duration) {\n  if (is.fnc(easing)) { return easing; }\n  var name = easing.split('(')[0];\n  var ease = penner[name];\n  var args = parseEasingParameters(easing);\n  switch (name) {\n    case 'spring' : return spring(easing, duration);\n    case 'cubicBezier' : return applyArguments(bezier, args);\n    case 'steps' : return applyArguments(steps, args);\n    default : return applyArguments(ease, args);\n  }\n}\n\n// Strings\n\nfunction selectString(str) {\n  try {\n    var nodes = document.querySelectorAll(str);\n    return nodes;\n  } catch(e) {\n    return;\n  }\n}\n\n// Arrays\n\nfunction filterArray(arr, callback) {\n  var len = arr.length;\n  var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n  var result = [];\n  for (var i = 0; i < len; i++) {\n    if (i in arr) {\n      var val = arr[i];\n      if (callback.call(thisArg, val, i, arr)) {\n        result.push(val);\n      }\n    }\n  }\n  return result;\n}\n\nfunction flattenArray(arr) {\n  return arr.reduce(function (a, b) { return a.concat(is.arr(b) ? flattenArray(b) : b); }, []);\n}\n\nfunction toArray(o) {\n  if (is.arr(o)) { return o; }\n  if (is.str(o)) { o = selectString(o) || o; }\n  if (o instanceof NodeList || o instanceof HTMLCollection) { return [].slice.call(o); }\n  return [o];\n}\n\nfunction arrayContains(arr, val) {\n  return arr.some(function (a) { return a === val; });\n}\n\n// Objects\n\nfunction cloneObject(o) {\n  var clone = {};\n  for (var p in o) { clone[p] = o[p]; }\n  return clone;\n}\n\nfunction replaceObjectProps(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o1) { o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p]; }\n  return o;\n}\n\nfunction mergeObjects(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o2) { o[p] = is.und(o1[p]) ? o2[p] : o1[p]; }\n  return o;\n}\n\n// Colors\n\nfunction rgbToRgba(rgbValue) {\n  var rgb = /rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(rgbValue);\n  return rgb ? (\"rgba(\" + (rgb[1]) + \",1)\") : rgbValue;\n}\n\nfunction hexToRgba(hexValue) {\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var hex = hexValue.replace(rgx, function (m, r, g, b) { return r + r + g + g + b + b; } );\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  var r = parseInt(rgb[1], 16);\n  var g = parseInt(rgb[2], 16);\n  var b = parseInt(rgb[3], 16);\n  return (\"rgba(\" + r + \",\" + g + \",\" + b + \",1)\");\n}\n\nfunction hslToRgba(hslValue) {\n  var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hslValue) || /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(hslValue);\n  var h = parseInt(hsl[1], 10) / 360;\n  var s = parseInt(hsl[2], 10) / 100;\n  var l = parseInt(hsl[3], 10) / 100;\n  var a = hsl[4] || 1;\n  function hue2rgb(p, q, t) {\n    if (t < 0) { t += 1; }\n    if (t > 1) { t -= 1; }\n    if (t < 1/6) { return p + (q - p) * 6 * t; }\n    if (t < 1/2) { return q; }\n    if (t < 2/3) { return p + (q - p) * (2/3 - t) * 6; }\n    return p;\n  }\n  var r, g, b;\n  if (s == 0) {\n    r = g = b = l;\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n  return (\"rgba(\" + (r * 255) + \",\" + (g * 255) + \",\" + (b * 255) + \",\" + a + \")\");\n}\n\nfunction colorToRgb(val) {\n  if (is.rgb(val)) { return rgbToRgba(val); }\n  if (is.hex(val)) { return hexToRgba(val); }\n  if (is.hsl(val)) { return hslToRgba(val); }\n}\n\n// Units\n\nfunction getUnit(val) {\n  var split = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);\n  if (split) { return split[1]; }\n}\n\nfunction getTransformUnit(propName) {\n  if (stringContains(propName, 'translate') || propName === 'perspective') { return 'px'; }\n  if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) { return 'deg'; }\n}\n\n// Values\n\nfunction getFunctionValue(val, animatable) {\n  if (!is.fnc(val)) { return val; }\n  return val(animatable.target, animatable.id, animatable.total);\n}\n\nfunction getAttribute(el, prop) {\n  return el.getAttribute(prop);\n}\n\nfunction convertPxToUnit(el, value, unit) {\n  var valueUnit = getUnit(value);\n  if (arrayContains([unit, 'deg', 'rad', 'turn'], valueUnit)) { return value; }\n  var cached = cache.CSS[value + unit];\n  if (!is.und(cached)) { return cached; }\n  var baseline = 100;\n  var tempEl = document.createElement(el.tagName);\n  var parentEl = (el.parentNode && (el.parentNode !== document)) ? el.parentNode : document.body;\n  parentEl.appendChild(tempEl);\n  tempEl.style.position = 'absolute';\n  tempEl.style.width = baseline + unit;\n  var factor = baseline / tempEl.offsetWidth;\n  parentEl.removeChild(tempEl);\n  var convertedUnit = factor * parseFloat(value);\n  cache.CSS[value + unit] = convertedUnit;\n  return convertedUnit;\n}\n\nfunction getCSSValue(el, prop, unit) {\n  if (prop in el.style) {\n    var uppercasePropName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    var value = el.style[prop] || getComputedStyle(el).getPropertyValue(uppercasePropName) || '0';\n    return unit ? convertPxToUnit(el, value, unit) : value;\n  }\n}\n\nfunction getAnimationType(el, prop) {\n  if (is.dom(el) && !is.inp(el) && (!is.nil(getAttribute(el, prop)) || (is.svg(el) && el[prop]))) { return 'attribute'; }\n  if (is.dom(el) && arrayContains(validTransforms, prop)) { return 'transform'; }\n  if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) { return 'css'; }\n  if (el[prop] != null) { return 'object'; }\n}\n\nfunction getElementTransforms(el) {\n  if (!is.dom(el)) { return; }\n  var str = el.style.transform || '';\n  var reg  = /(\\w+)\\(([^)]*)\\)/g;\n  var transforms = new Map();\n  var m; while (m = reg.exec(str)) { transforms.set(m[1], m[2]); }\n  return transforms;\n}\n\nfunction getTransformValue(el, propName, animatable, unit) {\n  var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + getTransformUnit(propName);\n  var value = getElementTransforms(el).get(propName) || defaultVal;\n  if (animatable) {\n    animatable.transforms.list.set(propName, value);\n    animatable.transforms['last'] = propName;\n  }\n  return unit ? convertPxToUnit(el, value, unit) : value;\n}\n\nfunction getOriginalTargetValue(target, propName, unit, animatable) {\n  switch (getAnimationType(target, propName)) {\n    case 'transform': return getTransformValue(target, propName, animatable, unit);\n    case 'css': return getCSSValue(target, propName, unit);\n    case 'attribute': return getAttribute(target, propName);\n    default: return target[propName] || 0;\n  }\n}\n\nfunction getRelativeValue(to, from) {\n  var operator = /^(\\*=|\\+=|-=)/.exec(to);\n  if (!operator) { return to; }\n  var u = getUnit(to) || 0;\n  var x = parseFloat(from);\n  var y = parseFloat(to.replace(operator[0], ''));\n  switch (operator[0][0]) {\n    case '+': return x + y + u;\n    case '-': return x - y + u;\n    case '*': return x * y + u;\n  }\n}\n\nfunction validateValue(val, unit) {\n  if (is.col(val)) { return colorToRgb(val); }\n  if (/\\s/g.test(val)) { return val; }\n  var originalUnit = getUnit(val);\n  var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;\n  if (unit) { return unitLess + unit; }\n  return unitLess;\n}\n\n// getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes\n// adapted from https://gist.github.com/SebLambla/3e0550c496c236709744\n\nfunction getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el) {\n  return Math.PI * 2 * getAttribute(el, 'r');\n}\n\nfunction getRectLength(el) {\n  return (getAttribute(el, 'width') * 2) + (getAttribute(el, 'height') * 2);\n}\n\nfunction getLineLength(el) {\n  return getDistance(\n    {x: getAttribute(el, 'x1'), y: getAttribute(el, 'y1')}, \n    {x: getAttribute(el, 'x2'), y: getAttribute(el, 'y2')}\n  );\n}\n\nfunction getPolylineLength(el) {\n  var points = el.points;\n  var totalLength = 0;\n  var previousPos;\n  for (var i = 0 ; i < points.numberOfItems; i++) {\n    var currentPos = points.getItem(i);\n    if (i > 0) { totalLength += getDistance(previousPos, currentPos); }\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el) {\n  var points = el.points;\n  return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n}\n\n// Path animation\n\nfunction getTotalLength(el) {\n  if (el.getTotalLength) { return el.getTotalLength(); }\n  switch(el.tagName.toLowerCase()) {\n    case 'circle': return getCircleLength(el);\n    case 'rect': return getRectLength(el);\n    case 'line': return getLineLength(el);\n    case 'polyline': return getPolylineLength(el);\n    case 'polygon': return getPolygonLength(el);\n  }\n}\n\nfunction setDashoffset(el) {\n  var pathLength = getTotalLength(el);\n  el.setAttribute('stroke-dasharray', pathLength);\n  return pathLength;\n}\n\n// Motion path\n\nfunction getParentSvgEl(el) {\n  var parentEl = el.parentNode;\n  while (is.svg(parentEl)) {\n    if (!is.svg(parentEl.parentNode)) { break; }\n    parentEl = parentEl.parentNode;\n  }\n  return parentEl;\n}\n\nfunction getParentSvg(pathEl, svgData) {\n  var svg = svgData || {};\n  var parentSvgEl = svg.el || getParentSvgEl(pathEl);\n  var rect = parentSvgEl.getBoundingClientRect();\n  var viewBoxAttr = getAttribute(parentSvgEl, 'viewBox');\n  var width = rect.width;\n  var height = rect.height;\n  var viewBox = svg.viewBox || (viewBoxAttr ? viewBoxAttr.split(' ') : [0, 0, width, height]);\n  return {\n    el: parentSvgEl,\n    viewBox: viewBox,\n    x: viewBox[0] / 1,\n    y: viewBox[1] / 1,\n    w: width,\n    h: height,\n    vW: viewBox[2],\n    vH: viewBox[3]\n  }\n}\n\nfunction getPath(path, percent) {\n  var pathEl = is.str(path) ? selectString(path)[0] : path;\n  var p = percent || 100;\n  return function(property) {\n    return {\n      property: property,\n      el: pathEl,\n      svg: getParentSvg(pathEl),\n      totalLength: getTotalLength(pathEl) * (p / 100)\n    }\n  }\n}\n\nfunction getPathProgress(path, progress, isPathTargetInsideSVG) {\n  function point(offset) {\n    if ( offset === void 0 ) offset = 0;\n\n    var l = progress + offset >= 1 ? progress + offset : 0;\n    return path.el.getPointAtLength(l);\n  }\n  var svg = getParentSvg(path.el, path.svg);\n  var p = point();\n  var p0 = point(-1);\n  var p1 = point(+1);\n  var scaleX = isPathTargetInsideSVG ? 1 : svg.w / svg.vW;\n  var scaleY = isPathTargetInsideSVG ? 1 : svg.h / svg.vH;\n  switch (path.property) {\n    case 'x': return (p.x - svg.x) * scaleX;\n    case 'y': return (p.y - svg.y) * scaleY;\n    case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n  }\n}\n\n// Decompose value\n\nfunction decomposeValue(val, unit) {\n  // const rgx = /-?\\d*\\.?\\d+/g; // handles basic numbers\n  // const rgx = /[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var rgx = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var value = validateValue((is.pth(val) ? val.totalLength : val), unit) + '';\n  return {\n    original: value,\n    numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],\n    strings: (is.str(val) || unit) ? value.split(rgx) : []\n  }\n}\n\n// Animatables\n\nfunction parseTargets(targets) {\n  var targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n  return filterArray(targetsArray, function (item, pos, self) { return self.indexOf(item) === pos; });\n}\n\nfunction getAnimatables(targets) {\n  var parsed = parseTargets(targets);\n  return parsed.map(function (t, i) {\n    return {target: t, id: i, total: parsed.length, transforms: { list: getElementTransforms(t) } };\n  });\n}\n\n// Properties\n\nfunction normalizePropertyTweens(prop, tweenSettings) {\n  var settings = cloneObject(tweenSettings);\n  // Override duration if easing is a spring\n  if (/^spring/.test(settings.easing)) { settings.duration = spring(settings.easing); }\n  if (is.arr(prop)) {\n    var l = prop.length;\n    var isFromTo = (l === 2 && !is.obj(prop[0]));\n    if (!isFromTo) {\n      // Duration divided by the number of tweens\n      if (!is.fnc(tweenSettings.duration)) { settings.duration = tweenSettings.duration / l; }\n    } else {\n      // Transform [from, to] values shorthand to a valid tween value\n      prop = {value: prop};\n    }\n  }\n  var propArray = is.arr(prop) ? prop : [prop];\n  return propArray.map(function (v, i) {\n    var obj = (is.obj(v) && !is.pth(v)) ? v : {value: v};\n    // Default delay value should only be applied to the first tween\n    if (is.und(obj.delay)) { obj.delay = !i ? tweenSettings.delay : 0; }\n    // Default endDelay value should only be applied to the last tween\n    if (is.und(obj.endDelay)) { obj.endDelay = i === propArray.length - 1 ? tweenSettings.endDelay : 0; }\n    return obj;\n  }).map(function (k) { return mergeObjects(k, settings); });\n}\n\n\nfunction flattenKeyframes(keyframes) {\n  var propertyNames = filterArray(flattenArray(keyframes.map(function (key) { return Object.keys(key); })), function (p) { return is.key(p); })\n  .reduce(function (a,b) { if (a.indexOf(b) < 0) { a.push(b); } return a; }, []);\n  var properties = {};\n  var loop = function ( i ) {\n    var propName = propertyNames[i];\n    properties[propName] = keyframes.map(function (key) {\n      var newKey = {};\n      for (var p in key) {\n        if (is.key(p)) {\n          if (p == propName) { newKey.value = key[p]; }\n        } else {\n          newKey[p] = key[p];\n        }\n      }\n      return newKey;\n    });\n  };\n\n  for (var i = 0; i < propertyNames.length; i++) loop( i );\n  return properties;\n}\n\nfunction getProperties(tweenSettings, params) {\n  var properties = [];\n  var keyframes = params.keyframes;\n  if (keyframes) { params = mergeObjects(flattenKeyframes(keyframes), params); }\n  for (var p in params) {\n    if (is.key(p)) {\n      properties.push({\n        name: p,\n        tweens: normalizePropertyTweens(params[p], tweenSettings)\n      });\n    }\n  }\n  return properties;\n}\n\n// Tweens\n\nfunction normalizeTweenValues(tween, animatable) {\n  var t = {};\n  for (var p in tween) {\n    var value = getFunctionValue(tween[p], animatable);\n    if (is.arr(value)) {\n      value = value.map(function (v) { return getFunctionValue(v, animatable); });\n      if (value.length === 1) { value = value[0]; }\n    }\n    t[p] = value;\n  }\n  t.duration = parseFloat(t.duration);\n  t.delay = parseFloat(t.delay);\n  return t;\n}\n\nfunction normalizeTweens(prop, animatable) {\n  var previousTween;\n  return prop.tweens.map(function (t) {\n    var tween = normalizeTweenValues(t, animatable);\n    var tweenValue = tween.value;\n    var to = is.arr(tweenValue) ? tweenValue[1] : tweenValue;\n    var toUnit = getUnit(to);\n    var originalValue = getOriginalTargetValue(animatable.target, prop.name, toUnit, animatable);\n    var previousValue = previousTween ? previousTween.to.original : originalValue;\n    var from = is.arr(tweenValue) ? tweenValue[0] : previousValue;\n    var fromUnit = getUnit(from) || getUnit(originalValue);\n    var unit = toUnit || fromUnit;\n    if (is.und(to)) { to = previousValue; }\n    tween.from = decomposeValue(from, unit);\n    tween.to = decomposeValue(getRelativeValue(to, from), unit);\n    tween.start = previousTween ? previousTween.end : 0;\n    tween.end = tween.start + tween.delay + tween.duration + tween.endDelay;\n    tween.easing = parseEasings(tween.easing, tween.duration);\n    tween.isPath = is.pth(tweenValue);\n    tween.isPathTargetInsideSVG = tween.isPath && is.svg(animatable.target);\n    tween.isColor = is.col(tween.from.original);\n    if (tween.isColor) { tween.round = 1; }\n    previousTween = tween;\n    return tween;\n  });\n}\n\n// Tween progress\n\nvar setProgressValue = {\n  css: function (t, p, v) { return t.style[p] = v; },\n  attribute: function (t, p, v) { return t.setAttribute(p, v); },\n  object: function (t, p, v) { return t[p] = v; },\n  transform: function (t, p, v, transforms, manual) {\n    transforms.list.set(p, v);\n    if (p === transforms.last || manual) {\n      var str = '';\n      transforms.list.forEach(function (value, prop) { str += prop + \"(\" + value + \") \"; });\n      t.style.transform = str;\n    }\n  }\n};\n\n// Set Value helper\n\nfunction setTargetsValue(targets, properties) {\n  var animatables = getAnimatables(targets);\n  animatables.forEach(function (animatable) {\n    for (var property in properties) {\n      var value = getFunctionValue(properties[property], animatable);\n      var target = animatable.target;\n      var valueUnit = getUnit(value);\n      var originalValue = getOriginalTargetValue(target, property, valueUnit, animatable);\n      var unit = valueUnit || getUnit(originalValue);\n      var to = getRelativeValue(validateValue(value, unit), originalValue);\n      var animType = getAnimationType(target, property);\n      setProgressValue[animType](target, property, to, animatable.transforms, true);\n    }\n  });\n}\n\n// Animations\n\nfunction createAnimation(animatable, prop) {\n  var animType = getAnimationType(animatable.target, prop.name);\n  if (animType) {\n    var tweens = normalizeTweens(prop, animatable);\n    var lastTween = tweens[tweens.length - 1];\n    return {\n      type: animType,\n      property: prop.name,\n      animatable: animatable,\n      tweens: tweens,\n      duration: lastTween.end,\n      delay: tweens[0].delay,\n      endDelay: lastTween.endDelay\n    }\n  }\n}\n\nfunction getAnimations(animatables, properties) {\n  return filterArray(flattenArray(animatables.map(function (animatable) {\n    return properties.map(function (prop) {\n      return createAnimation(animatable, prop);\n    });\n  })), function (a) { return !is.und(a); });\n}\n\n// Create Instance\n\nfunction getInstanceTimings(animations, tweenSettings) {\n  var animLength = animations.length;\n  var getTlOffset = function (anim) { return anim.timelineOffset ? anim.timelineOffset : 0; };\n  var timings = {};\n  timings.duration = animLength ? Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration; })) : tweenSettings.duration;\n  timings.delay = animLength ? Math.min.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.delay; })) : tweenSettings.delay;\n  timings.endDelay = animLength ? timings.duration - Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration - anim.endDelay; })) : tweenSettings.endDelay;\n  return timings;\n}\n\nvar instanceID = 0;\n\nfunction createNewInstance(params) {\n  var instanceSettings = replaceObjectProps(defaultInstanceSettings, params);\n  var tweenSettings = replaceObjectProps(defaultTweenSettings, params);\n  var properties = getProperties(tweenSettings, params);\n  var animatables = getAnimatables(params.targets);\n  var animations = getAnimations(animatables, properties);\n  var timings = getInstanceTimings(animations, tweenSettings);\n  var id = instanceID;\n  instanceID++;\n  return mergeObjects(instanceSettings, {\n    id: id,\n    children: [],\n    animatables: animatables,\n    animations: animations,\n    duration: timings.duration,\n    delay: timings.delay,\n    endDelay: timings.endDelay\n  });\n}\n\n// Core\n\nvar activeInstances = [];\n\nvar engine = (function () {\n  var raf;\n\n  function play() {\n    if (!raf && (!isDocumentHidden() || !anime.suspendWhenDocumentHidden) && activeInstances.length > 0) {\n      raf = requestAnimationFrame(step);\n    }\n  }\n  function step(t) {\n    // memo on algorithm issue:\n    // dangerous iteration over mutable `activeInstances`\n    // (that collection may be updated from within callbacks of `tick`-ed animation instances)\n    var activeInstancesLength = activeInstances.length;\n    var i = 0;\n    while (i < activeInstancesLength) {\n      var activeInstance = activeInstances[i];\n      if (!activeInstance.paused) {\n        activeInstance.tick(t);\n        i++;\n      } else {\n        activeInstances.splice(i, 1);\n        activeInstancesLength--;\n      }\n    }\n    raf = i > 0 ? requestAnimationFrame(step) : undefined;\n  }\n\n  function handleVisibilityChange() {\n    if (!anime.suspendWhenDocumentHidden) { return; }\n\n    if (isDocumentHidden()) {\n      // suspend ticks\n      raf = cancelAnimationFrame(raf);\n    } else { // is back to active tab\n      // first adjust animations to consider the time that ticks were suspended\n      activeInstances.forEach(\n        function (instance) { return instance ._onDocumentVisibility(); }\n      );\n      engine();\n    }\n  }\n  if (typeof document !== 'undefined') {\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n  }\n\n  return play;\n})();\n\nfunction isDocumentHidden() {\n  return !!document && document.hidden;\n}\n\n// Public Instance\n\nfunction anime(params) {\n  if ( params === void 0 ) params = {};\n\n\n  var startTime = 0, lastTime = 0, now = 0;\n  var children, childrenLength = 0;\n  var resolve = null;\n\n  function makePromise(instance) {\n    var promise = window.Promise && new Promise(function (_resolve) { return resolve = _resolve; });\n    instance.finished = promise;\n    return promise;\n  }\n\n  var instance = createNewInstance(params);\n  var promise = makePromise(instance);\n\n  function toggleInstanceDirection() {\n    var direction = instance.direction;\n    if (direction !== 'alternate') {\n      instance.direction = direction !== 'normal' ? 'normal' : 'reverse';\n    }\n    instance.reversed = !instance.reversed;\n    children.forEach(function (child) { return child.reversed = instance.reversed; });\n  }\n\n  function adjustTime(time) {\n    return instance.reversed ? instance.duration - time : time;\n  }\n\n  function resetTime() {\n    startTime = 0;\n    lastTime = adjustTime(instance.currentTime) * (1 / anime.speed);\n  }\n\n  function seekChild(time, child) {\n    if (child) { child.seek(time - child.timelineOffset); }\n  }\n\n  function syncInstanceChildren(time) {\n    if (!instance.reversePlayback) {\n      for (var i = 0; i < childrenLength; i++) { seekChild(time, children[i]); }\n    } else {\n      for (var i$1 = childrenLength; i$1--;) { seekChild(time, children[i$1]); }\n    }\n  }\n\n  function setAnimationsProgress(insTime) {\n    var i = 0;\n    var animations = instance.animations;\n    var animationsLength = animations.length;\n    while (i < animationsLength) {\n      var anim = animations[i];\n      var animatable = anim.animatable;\n      var tweens = anim.tweens;\n      var tweenLength = tweens.length - 1;\n      var tween = tweens[tweenLength];\n      // Only check for keyframes if there is more than one tween\n      if (tweenLength) { tween = filterArray(tweens, function (t) { return (insTime < t.end); })[0] || tween; }\n      var elapsed = minMax(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;\n      var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed);\n      var strings = tween.to.strings;\n      var round = tween.round;\n      var numbers = [];\n      var toNumbersLength = tween.to.numbers.length;\n      var progress = (void 0);\n      for (var n = 0; n < toNumbersLength; n++) {\n        var value = (void 0);\n        var toNumber = tween.to.numbers[n];\n        var fromNumber = tween.from.numbers[n] || 0;\n        if (!tween.isPath) {\n          value = fromNumber + (eased * (toNumber - fromNumber));\n        } else {\n          value = getPathProgress(tween.value, eased * toNumber, tween.isPathTargetInsideSVG);\n        }\n        if (round) {\n          if (!(tween.isColor && n > 2)) {\n            value = Math.round(value * round) / round;\n          }\n        }\n        numbers.push(value);\n      }\n      // Manual Array.reduce for better performances\n      var stringsLength = strings.length;\n      if (!stringsLength) {\n        progress = numbers[0];\n      } else {\n        progress = strings[0];\n        for (var s = 0; s < stringsLength; s++) {\n          var a = strings[s];\n          var b = strings[s + 1];\n          var n$1 = numbers[s];\n          if (!isNaN(n$1)) {\n            if (!b) {\n              progress += n$1 + ' ';\n            } else {\n              progress += n$1 + b;\n            }\n          }\n        }\n      }\n      setProgressValue[anim.type](animatable.target, anim.property, progress, animatable.transforms);\n      anim.currentValue = progress;\n      i++;\n    }\n  }\n\n  function setCallback(cb) {\n    if (instance[cb] && !instance.passThrough) { instance[cb](instance); }\n  }\n\n  function countIteration() {\n    if (instance.remaining && instance.remaining !== true) {\n      instance.remaining--;\n    }\n  }\n\n  function setInstanceProgress(engineTime) {\n    var insDuration = instance.duration;\n    var insDelay = instance.delay;\n    var insEndDelay = insDuration - instance.endDelay;\n    var insTime = adjustTime(engineTime);\n    instance.progress = minMax((insTime / insDuration) * 100, 0, 100);\n    instance.reversePlayback = insTime < instance.currentTime;\n    if (children) { syncInstanceChildren(insTime); }\n    if (!instance.began && instance.currentTime > 0) {\n      instance.began = true;\n      setCallback('begin');\n    }\n    if (!instance.loopBegan && instance.currentTime > 0) {\n      instance.loopBegan = true;\n      setCallback('loopBegin');\n    }\n    if (insTime <= insDelay && instance.currentTime !== 0) {\n      setAnimationsProgress(0);\n    }\n    if ((insTime >= insEndDelay && instance.currentTime !== insDuration) || !insDuration) {\n      setAnimationsProgress(insDuration);\n    }\n    if (insTime > insDelay && insTime < insEndDelay) {\n      if (!instance.changeBegan) {\n        instance.changeBegan = true;\n        instance.changeCompleted = false;\n        setCallback('changeBegin');\n      }\n      setCallback('change');\n      setAnimationsProgress(insTime);\n    } else {\n      if (instance.changeBegan) {\n        instance.changeCompleted = true;\n        instance.changeBegan = false;\n        setCallback('changeComplete');\n      }\n    }\n    instance.currentTime = minMax(insTime, 0, insDuration);\n    if (instance.began) { setCallback('update'); }\n    if (engineTime >= insDuration) {\n      lastTime = 0;\n      countIteration();\n      if (!instance.remaining) {\n        instance.paused = true;\n        if (!instance.completed) {\n          instance.completed = true;\n          setCallback('loopComplete');\n          setCallback('complete');\n          if (!instance.passThrough && 'Promise' in window) {\n            resolve();\n            promise = makePromise(instance);\n          }\n        }\n      } else {\n        startTime = now;\n        setCallback('loopComplete');\n        instance.loopBegan = false;\n        if (instance.direction === 'alternate') {\n          toggleInstanceDirection();\n        }\n      }\n    }\n  }\n\n  instance.reset = function() {\n    var direction = instance.direction;\n    instance.passThrough = false;\n    instance.currentTime = 0;\n    instance.progress = 0;\n    instance.paused = true;\n    instance.began = false;\n    instance.loopBegan = false;\n    instance.changeBegan = false;\n    instance.completed = false;\n    instance.changeCompleted = false;\n    instance.reversePlayback = false;\n    instance.reversed = direction === 'reverse';\n    instance.remaining = instance.loop;\n    children = instance.children;\n    childrenLength = children.length;\n    for (var i = childrenLength; i--;) { instance.children[i].reset(); }\n    if (instance.reversed && instance.loop !== true || (direction === 'alternate' && instance.loop === 1)) { instance.remaining++; }\n    setAnimationsProgress(instance.reversed ? instance.duration : 0);\n  };\n\n  // internal method (for engine) to adjust animation timings before restoring engine ticks (rAF)\n  instance._onDocumentVisibility = resetTime;\n\n  // Set Value helper\n\n  instance.set = function(targets, properties) {\n    setTargetsValue(targets, properties);\n    return instance;\n  };\n\n  instance.tick = function(t) {\n    now = t;\n    if (!startTime) { startTime = now; }\n    setInstanceProgress((now + (lastTime - startTime)) * anime.speed);\n  };\n\n  instance.seek = function(time) {\n    setInstanceProgress(adjustTime(time));\n  };\n\n  instance.pause = function() {\n    instance.paused = true;\n    resetTime();\n  };\n\n  instance.play = function() {\n    if (!instance.paused) { return; }\n    if (instance.completed) { instance.reset(); }\n    instance.paused = false;\n    activeInstances.push(instance);\n    resetTime();\n    engine();\n  };\n\n  instance.reverse = function() {\n    toggleInstanceDirection();\n    instance.completed = instance.reversed ? false : true;\n    resetTime();\n  };\n\n  instance.restart = function() {\n    instance.reset();\n    instance.play();\n  };\n\n  instance.remove = function(targets) {\n    var targetsArray = parseTargets(targets);\n    removeTargetsFromInstance(targetsArray, instance);\n  };\n\n  instance.reset();\n\n  if (instance.autoplay) { instance.play(); }\n\n  return instance;\n\n}\n\n// Remove targets from animation\n\nfunction removeTargetsFromAnimations(targetsArray, animations) {\n  for (var a = animations.length; a--;) {\n    if (arrayContains(targetsArray, animations[a].animatable.target)) {\n      animations.splice(a, 1);\n    }\n  }\n}\n\nfunction removeTargetsFromInstance(targetsArray, instance) {\n  var animations = instance.animations;\n  var children = instance.children;\n  removeTargetsFromAnimations(targetsArray, animations);\n  for (var c = children.length; c--;) {\n    var child = children[c];\n    var childAnimations = child.animations;\n    removeTargetsFromAnimations(targetsArray, childAnimations);\n    if (!childAnimations.length && !child.children.length) { children.splice(c, 1); }\n  }\n  if (!animations.length && !children.length) { instance.pause(); }\n}\n\nfunction removeTargetsFromActiveInstances(targets) {\n  var targetsArray = parseTargets(targets);\n  for (var i = activeInstances.length; i--;) {\n    var instance = activeInstances[i];\n    removeTargetsFromInstance(targetsArray, instance);\n  }\n}\n\n// Stagger helpers\n\nfunction stagger(val, params) {\n  if ( params === void 0 ) params = {};\n\n  var direction = params.direction || 'normal';\n  var easing = params.easing ? parseEasings(params.easing) : null;\n  var grid = params.grid;\n  var axis = params.axis;\n  var fromIndex = params.from || 0;\n  var fromFirst = fromIndex === 'first';\n  var fromCenter = fromIndex === 'center';\n  var fromLast = fromIndex === 'last';\n  var isRange = is.arr(val);\n  var val1 = isRange ? parseFloat(val[0]) : parseFloat(val);\n  var val2 = isRange ? parseFloat(val[1]) : 0;\n  var unit = getUnit(isRange ? val[1] : val) || 0;\n  var start = params.start || 0 + (isRange ? val1 : 0);\n  var values = [];\n  var maxValue = 0;\n  return function (el, i, t) {\n    if (fromFirst) { fromIndex = 0; }\n    if (fromCenter) { fromIndex = (t - 1) / 2; }\n    if (fromLast) { fromIndex = t - 1; }\n    if (!values.length) {\n      for (var index = 0; index < t; index++) {\n        if (!grid) {\n          values.push(Math.abs(fromIndex - index));\n        } else {\n          var fromX = !fromCenter ? fromIndex%grid[0] : (grid[0]-1)/2;\n          var fromY = !fromCenter ? Math.floor(fromIndex/grid[0]) : (grid[1]-1)/2;\n          var toX = index%grid[0];\n          var toY = Math.floor(index/grid[0]);\n          var distanceX = fromX - toX;\n          var distanceY = fromY - toY;\n          var value = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') { value = -distanceX; }\n          if (axis === 'y') { value = -distanceY; }\n          values.push(value);\n        }\n        maxValue = Math.max.apply(Math, values);\n      }\n      if (easing) { values = values.map(function (val) { return easing(val / maxValue) * maxValue; }); }\n      if (direction === 'reverse') { values = values.map(function (val) { return axis ? (val < 0) ? val * -1 : -val : Math.abs(maxValue - val); }); }\n    }\n    var spacing = isRange ? (val2 - val1) / maxValue : val1;\n    return start + (spacing * (Math.round(values[i] * 100) / 100)) + unit;\n  }\n}\n\n// Timeline\n\nfunction timeline(params) {\n  if ( params === void 0 ) params = {};\n\n  var tl = anime(params);\n  tl.duration = 0;\n  tl.add = function(instanceParams, timelineOffset) {\n    var tlIndex = activeInstances.indexOf(tl);\n    var children = tl.children;\n    if (tlIndex > -1) { activeInstances.splice(tlIndex, 1); }\n    function passThrough(ins) { ins.passThrough = true; }\n    for (var i = 0; i < children.length; i++) { passThrough(children[i]); }\n    var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params));\n    insParams.targets = insParams.targets || params.targets;\n    var tlDuration = tl.duration;\n    insParams.autoplay = false;\n    insParams.direction = tl.direction;\n    insParams.timelineOffset = is.und(timelineOffset) ? tlDuration : getRelativeValue(timelineOffset, tlDuration);\n    passThrough(tl);\n    tl.seek(insParams.timelineOffset);\n    var ins = anime(insParams);\n    passThrough(ins);\n    children.push(ins);\n    var timings = getInstanceTimings(children, params);\n    tl.delay = timings.delay;\n    tl.endDelay = timings.endDelay;\n    tl.duration = timings.duration;\n    tl.seek(0);\n    tl.reset();\n    if (tl.autoplay) { tl.play(); }\n    return tl;\n  };\n  return tl;\n}\n\nanime.version = '3.2.1';\nanime.speed = 1;\n// TODO:#review: naming, documentation\nanime.suspendWhenDocumentHidden = true;\nanime.running = activeInstances;\nanime.remove = removeTargetsFromActiveInstances;\nanime.get = getOriginalTargetValue;\nanime.set = setTargetsValue;\nanime.convertPx = convertPxToUnit;\nanime.path = getPath;\nanime.setDashoffset = setDashoffset;\nanime.stagger = stagger;\nanime.timeline = timeline;\nanime.easing = parseEasings;\nanime.penner = penner;\nanime.random = function (min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; };\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (anime);\n\n\n//# sourceURL=webpack://default/./node_modules/animejs/lib/anime.es.js?");

/***/ }),

/***/ "./src/js/components/OptionsAnime.js":
/*!*******************************************!*\
  !*** ./src/js/components/OptionsAnime.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ANIM_PROPERTY: function() { return /* binding */ ANIM_PROPERTY; },\n/* harmony export */   EASING: function() { return /* binding */ EASING; },\n/* harmony export */   OptionsAnime: function() { return /* binding */ OptionsAnime; },\n/* harmony export */   OptionsStragger: function() { return /* binding */ OptionsStragger; }\n/* harmony export */ });\n/**\r\n *\r\n * @type {Readonly<{outIn: {easeOutInQuad: string, easeOutInQuart: string, easeOutInExpo: string, easeOutInBounce: string, easeOutInQuint: string, easeOutInSine: string, easeOutBounce: string, easeOutInCubic: string, easeOutInCirc: string, easeOutInBack: string}, spring(Number, *, *, *): string, inOut: {easeInOutCirc: string, easeInOutSine: string, easeInOutBack: string, easeInBounce: string, easeInOutQuad: string, easeInOutCubic: string, easeInOutQuint: string, easeInOutBounce: string, easeInOutQuart: string, easeInOutExpo: string}, in: {easeInQuad: string, easeInExpo: string, easeInCubic: string, easeInQuint: string, easeInQuart: string, easeInBack: string, easeInSine: string, easeInCirc: string}, elastic(string, Number, (Number|CSSStyleDeclaration.float)): string, steps(Number): string, out: {easeOutCubic: string, easeOutQuart: string, easeOutQuint: string, easeOutQuad: string, easeOutExpo: string, easeOutSine: string, easeOutCirc: string, easeOutBack: string}}>}\r\n * @see https://easings.net/\r\n * @description\r\n *    Object with enumerates easing and functions need for create a custom easing-function\r\n */\r\nconst EASING = Object.freeze({\r\n    in: {\r\n        'easeInQuad': 'easeInQuad',\r\n        'easeInCubic': 'easeInCubic',\r\n        'easeInQuart': 'easeInQuart',\r\n        'easeInQuint': 'easeInQuint',\r\n        'easeInSine': 'easeInSine',\r\n        'easeInExpo': 'easeInExpo',\r\n        'easeInCirc': 'easeInCirc',\r\n        'easeInBack': 'easeInBack',\r\n    },\r\n    out: {\r\n        'easeOutQuad': 'easeOutQuad',\r\n        'easeOutCubic': 'easeOutCubic',\r\n        'easeOutQuart': 'easeOutQuart',\r\n        'easeOutQuint': 'easeOutQuint',\r\n        'easeOutSine': 'easeOutSine',\r\n        'easeOutExpo': 'easeOutExpo',\r\n        'easeOutCirc': 'easeOutCirc',\r\n        'easeOutBack': 'easeOutBack',\r\n    },\r\n    inOut: {\r\n        'easeInBounce': 'easeInBounce',\r\n        'easeInOutQuad': 'easeInOutQuad',\r\n        'easeInOutCubic': 'easeInOutCubic',\r\n        'easeInOutQuart': 'easeInOutQuart',\r\n        'easeInOutQuint': 'easeInOutQuint',\r\n        'easeInOutSine': 'easeInOutSine',\r\n        'easeInOutExpo': 'easeInOutExpo',\r\n        'easeInOutCirc': 'easeInOutCirc',\r\n        'easeInOutBack': 'easeInOutBack',\r\n        'easeInOutBounce': 'easeInOutBounce',\r\n    },\r\n    outIn: {\r\n        'easeOutBounce': 'easeOutBounce',\r\n        'easeOutInQuad': 'easeOutInQuad',\r\n        'easeOutInCubic': 'easeOutInCubic',\r\n        'easeOutInQuart': 'easeOutInQuart',\r\n        'easeOutInQuint': 'easeOutInQuint',\r\n        'easeOutInSine': 'easeOutInSine',\r\n        'easeOutInExpo': 'easeOutInExpo',\r\n        'easeOutInCirc': 'easeOutInCirc',\r\n        'easeOutInBack': 'easeOutInBack',\r\n        'easeOutInBounce': 'easeOutInBounce'\r\n    },\r\n    linear:'linear',\r\n    /**\r\n     *\r\n     * @param {Number} mass Min 0, Max 100\r\n     * @default 1\r\n     * @param stiffness Min 0, Max 100\r\n     * @default 100\r\n     * @param damping Min 0, Max 100\r\n     * @default 10\r\n     * @param velocity Min 0, Max 100\r\n     * @default 0\r\n     * @return {string}\r\n     */\r\n    spring(mass, stiffness, damping, velocity) {\r\n        return `spring(${mass}, ${stiffness}, ${damping}, ${velocity})`\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {Number} value Min = 1, Max= Infinity.\r\n     * ÐÐ¿ÑÐµÐ´ÐµÐ»ÑÐµÑ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¿ÐµÑÐµÑÐ¾Ð´Ð¾Ð², ÐºÐ¾ÑÐ¾ÑÑÐµ ÑÑÐµÐ±ÑÐµÑÑÑ Ð°Ð½Ð¸Ð¼Ð°ÑÐ¸Ð¸ Ð´Ð»Ñ Ð´Ð¾ÑÑÐ¸Ð¶ÐµÐ½Ð¸Ñ ÐºÐ¾Ð½ÐµÑÐ½Ð¾Ð³Ð¾ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ñ.\r\n     * @return {string}\r\n     */\r\n    steps(value) {\r\n        return `steps(${value})`\r\n    },\r\n    /**\r\n     *\r\n     * @param {string} easing\r\n     * @see easings\r\n     * @param {Number} amplitude Min=1:Max=10.\r\n     * ÐÐ¾Ð½ÑÑÐ¾Ð»Ð¸ÑÑÐµÑ Ð²ÑÐ±ÑÐ¾Ñ ÐºÑÐ¸Ð²Ð¾Ð¹.\r\n     * Ð§ÐµÐ¼ Ð±Ð¾Ð»ÑÑÐµ ÑÑÐ¾ ÑÐ¸ÑÐ»Ð¾, ÑÐµÐ¼ Ð±Ð¾Ð»ÑÑÐµ Ð¿ÐµÑÐµÑÐµÐ³ÑÐ»Ð¸ÑÐ¾Ð²Ð°Ð½Ð¸Ðµ.\r\n     * @default 1\r\n     * @param {Number|float} period Min = 0.1, :Max = 2.\r\n     * Ð£Ð¿ÑÐ°Ð²Ð»ÑÐµÑ ÑÐµÐ¼, ÑÐºÐ¾Ð»ÑÐºÐ¾ ÑÐ°Ð· ÐºÑÐ¸Ð²Ð°Ñ Ð¿ÐµÑÐµÐ¼ÐµÑÐ°ÐµÑÑÑ Ð²Ð¿ÐµÑÐµÐ´ Ð¸ Ð½Ð°Ð·Ð°Ð´.\r\n     * Ð§ÐµÐ¼ Ð¼ÐµÐ½ÑÑÐµ ÑÑÐ¾ ÑÐ¸ÑÐ»Ð¾, ÑÐµÐ¼ Ð±Ð¾Ð»ÑÑÐµ ÑÐ°Ð· ÐºÑÐ¸Ð²Ð°Ñ Ð´Ð²Ð¸Ð¶ÐµÑÑÑ Ð²Ð¿ÐµÑÐµÐ´ Ð¸ Ð½Ð°Ð·Ð°Ð´.\r\n     * @default 0.5\r\n     * @return {string}\r\n     */\r\n    elastic(easing, amplitude, period) {\r\n        return `${easing}(${amplitude},${period})`\r\n    }\r\n})\r\nconst ANIM_PROPERTY = {\r\n    transform: {\r\n        'translateX': 'translateX',\r\n        'translateY': 'translateY',\r\n        'translateZ': 'translateZ',\r\n        'rotate': 'rotate',\r\n        'rotateX': 'rotateX',\r\n        'rotateY': 'rotateY',\r\n        'rotateZ': 'rotateZ',\r\n        'scale': 'scale',\r\n        'scaleX': 'scaleX',\r\n        'scaleY': 'scaleY',\r\n        'scaleZ': 'scaleZ',\r\n        'skew': 'skew',\r\n        'skewX': 'skewX',\r\n        'skewY': 'skewY',\r\n        'perspective': 'perspective'\r\n    }\r\n}\r\n\r\n/**\r\n * construction of options for anime.stagger.js\r\n * @example\r\n * let a = new OptionsStragger()\r\n * a.from = OptionsStragger.from.index(5)\r\n * a.options->{'from':5}\r\n */\r\nclass OptionsStragger {\r\n    static from = {\r\n        'first': 'first',\r\n        'last': 'last',\r\n        'center': 'center',\r\n        index: (value) => value\r\n    }\r\n    static direction = {\r\n        'normal': 'normal',\r\n        'reverse': 'reverse'\r\n    }\r\n\r\n    static grid = ['rows', 'columns']\r\n    static axis = {\r\n        'x': 'x',\r\n        'y': 'y'\r\n    }\r\n\r\n\r\n    constructor() {\r\n        this.options = {}\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string|number} value\r\n     * @see from\r\n     */\r\n    from(value) {\r\n        this.options['from'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} value Starts the staggering effect from a specific value.\r\n\r\n     */\r\n    start(value) {\r\n        this.options['start'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} value\r\n     * @see direction\r\n     */\r\n    direction(value) {\r\n        this.options['direction'] = value\r\n        return this\r\n    }\r\n\r\n    toString() {\r\n        return Object.entries(this.options).toString()\r\n    }\r\n}\r\n\r\n/**\r\n * construction of options for anime.js\r\n * @example\r\n * let a = new OptionsAnime().seDuration = 5\r\n * a.options->{'duration':5}\r\n */\r\nclass OptionsAnime {\r\n\r\n    constructor() {\r\n        this.options = {}\r\n\r\n    }\r\n\r\n    /**\r\n     * @description this is example.\r\n     * @description she need for documentations\r\n     * @return undefined\r\n     * @deprecated\r\n     * @param  el\r\n     * @param {Number} index\r\n     * @param {Number} lenArrayElements\r\n     */\r\n    static paseParmets(el, index, lenArrayElements) {\r\n\r\n    }\r\n\r\n    /**\r\n     * @description Pseudo elements can't be targeted using JavaScript.\r\n     * @description\r\n     * @param {HTMLElement|Array<HTMLElement>|Object|Selection} value\r\n     */\r\n    setTargets(value) {\r\n        this.options['targets'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Number|function|anime.stagger} value if function she get el,index,lenElements\r\n     * @example\r\n     * duration:12000,//ms\r\n     * duration:function(el,index,lenElements){\r\n     *     return index - lenElements\r\n     * }\r\n     */\r\n    setDuration(value) {\r\n        this.options['duration'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * @description Defines the delay in milliseconds of the animation.\r\n     * @param {Number|stagger|paseParmets|Function} value\r\n     */\r\n    setDelay(value) {\r\n        this.options['delay'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * @description Defines the endDelay in milliseconds of the animation.\r\n     * @param {Number|stagger|paseParmets} value\r\n     * @return {OptionsAnime}\r\n     */\r\n    setEndDelay(value) {\r\n        this.options['endDelay'] = value\r\n        return this\r\n    }\r\n\r\n\r\n    /**\r\n     * @param {string|cubicBezier|spring|steps|elastic|paseParmets|function} value\r\n     * @default 'linear'\r\n     * @see  https://matthewlein.com/tools/ceaser\r\n     * @see EASING\r\n     * @see spring\r\n     * @example\r\n     * easing: 'cubicBezier(.5, .05, .1, .3)',\r\n     * easing: 'easeInOutSine',\r\n     * easing: 'easeInOutSine(amplitude, period)',\r\n     * easing: 'linear'\r\n     * easing: 'spring(mass, stiffness, damping, velocity)'\r\n     * easing: function(el, i, total) {\r\n     *     return function(t) {\r\n     *       return Math.pow(Math.sin(t * (i + 1)), total);\r\n     *     }\r\n     *   }\r\n     */\r\n    setEasing(value) {\r\n        this.options['easing'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Number} value ÐÐºÑÑÐ³Ð»ÑÐµÑ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ Ð´Ð¾ x Ð´ÐµÑÑÑÐ¸ÑÐ½ÑÑ Ð·Ð½Ð°ÐºÐ¾Ð².\r\n     * @default 0\r\n     * @example\r\n     * anime({\r\n     *   targets: roundLogEl,\r\n     *   innerHTML: [0, 10000],\r\n     *   easing: 'linear',\r\n     *   round: 10 //ÐÐºÑÑÐ³Ð»Ð¸Ñ Ð°Ð½Ð¸Ð¼Ð¸ÑÐ¾Ð²Ð°Ð½Ð½Ð¾Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ Ð´Ð¾ 1 Ð´ÐµÑÑÑÐ¸ÑÐ½Ð¾Ð³Ð¾ ÑÐ¸ÑÐ»Ð°.\r\n     * })\r\n     */\r\n    setRound(value) {\r\n        this.options['round'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} value\r\n     * @description 'normal' -\r\n     * Animation progress goes from 0 to 100%.\r\n     * @description 'reverse' -\r\n     * Animation progress goes from 100% to 0%.\r\n     * @description 'alternate' -\r\n     * Animation progress goes from 0% to 100% then goes back to 0%.\r\n     * @default 'normal'\r\n     */\r\n    setDirection(value) {\r\n        this.options['direction'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number|Boolean} value\r\n     * @description Defines the number of iterations of your animation.\r\n     */\r\n    setLoop(value) {\r\n        this.options['loop'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} value\r\n     * @default true\r\n     * @description Defines if the animation should automatically starts or not.\r\n     */\r\n    setAutoplay(value) {\r\n        this.options['autoplay'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {function} value ÐÐ±ÑÐ°ÑÐ½ÑÐ¹ Ð²ÑÐ·Ð¾Ð² ÑÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÑ Ð² ÐºÐ°Ð¶Ð´Ð¾Ð¼ ÐºÐ°Ð´ÑÐµ, ÐºÐ°Ðº ÑÐ¾Ð»ÑÐºÐ¾ Ð½Ð°ÑÐ¸Ð½Ð°ÐµÑÑÑ Ð²Ð¾ÑÐ¿ÑÐ¾Ð¸Ð·Ð²ÐµÐ´ÐµÐ½Ð¸Ðµ Ð°Ð½Ð¸Ð¼Ð°ÑÐ¸Ð¸.\r\n     * @description\r\n     *\r\n     * @example\r\n     *   update: function(anim) {\r\n     *     progressLogEl.value = 'progress : '+Math.round(anim.progress)+'%';\r\n     *     updateLogEl.value = 'updates : '+updates;\r\n     *   }\r\n     */\r\n    setUpdate(value) {\r\n        this.options['update'] = value\r\n        return this\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param {Array<OptionsAnime.options>} value\r\n     */\r\n    setKeyframes(value) {\r\n        this.options['keyframes'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} property\r\n     * @param {Number|string|Array<OptionsAnime>|Array|function} value function example function(el, index, lenElements) {\r\n     *     return (l - i) + .25;\r\n     *   }\r\n     * @param value\r\n     */\r\n    setAnimeProperty(property, value) {\r\n        this.options[property] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n\r\n     * @param {function} value Ð¾Ð±ÑÐ°ÑÐ½ÑÐ¹ Ð²ÑÐ·Ð¾Ð² ÑÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÑ Ð¾Ð´Ð¸Ð½ ÑÐ°Ð·, ÐºÐ¾Ð³Ð´Ð° Ð½Ð°ÑÐ¸Ð½Ð°ÐµÑÑÑ Ð²Ð¾ÑÐ¿ÑÐ¾Ð¸Ð·Ð²ÐµÐ´ÐµÐ½Ð¸Ðµ Ð°Ð½Ð¸Ð¼Ð°ÑÐ¸Ð¸.\r\n     *\r\n     * @example\r\n     * begin: function(anim) {\r\n     *\r\n     *         beginLogEl.value = 'began : ' + anim.began;\r\n     *     }\r\n     */\r\n    setBegin(value) {\r\n        this.options['begin'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param value Ð¾Ð±ÑÐ°ÑÐ½ÑÐ¹ Ð²ÑÐ·Ð¾Ð² ÑÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÑ Ð¾Ð´Ð¸Ð½ ÑÐ°Ð·, ÐºÐ¾Ð³Ð´Ð° Ð°Ð½Ð¸Ð¼Ð°ÑÐ¸Ñ Ð·Ð°Ð²ÐµÑÑÐµÐ½Ð°.\r\n     * @example\r\n     * complete: function(anim) {\r\n     *         completeLogEl.value = 'completed : ' + anim.completed;\r\n     *     }\r\n     */\r\n    setComplete(value) {\r\n        this.options['complete'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {function} value Ð¾Ð±ÑÐ°ÑÐ½ÑÐ¹ Ð²ÑÐ·Ð¾Ð² Ð·Ð°Ð¿ÑÑÐºÐ°ÐµÑÑÑ Ð¾Ð´Ð¸Ð½ ÑÐ°Ð· Ð¿ÑÐ¸ ÐºÐ°Ð¶Ð´Ð¾Ð¼ Ð½Ð°ÑÐ°Ð»Ðµ ÑÐ¸ÐºÐ»Ð°.\r\n     * @example\r\n     *   loopBegin: function(anim) {\r\n     *     loopBegan++;\r\n     *     beginLogEl.value = 'loop began : ' + loopBegan;\r\n     *   }\r\n     */\r\n    setLoopBegin(value) {\r\n        this.options['loopBegin'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param value Ð¾Ð±ÑÐ°ÑÐ½ÑÐ¹ Ð²ÑÐ·Ð¾Ð² Ð·Ð°Ð¿ÑÑÐºÐ°ÐµÑÑÑ Ð¾Ð´Ð¸Ð½ ÑÐ°Ð· Ð¿ÑÐ¸ ÐºÐ°Ð¶Ð´Ð¾Ð¼ Ð·Ð°Ð²ÐµÑÑÐµÐ½Ð¸Ð¸ ÑÐ¸ÐºÐ»Ð°.\r\n     * @example\r\n     *  loopComplete: function(anim) {\r\n     *     loopCompleted++;\r\n     *     completeLogEl.value = 'loop completed : ' + loopCompleted;\r\n     *   }\r\n     */\r\n    setLoopComplete(value) {\r\n        this.options['loopComplete'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {function} value ÐÐ±ÑÐ°ÑÐ½ÑÐ¹ Ð²ÑÐ·Ð¾Ð² ÑÑÐ°Ð±Ð°ÑÑÐ²Ð°ÐµÑ Ð½Ð° ÐºÐ°Ð¶Ð´Ð¾Ð¼ ÐºÐ°Ð´ÑÐµ Ð¼ÐµÐ¶Ð´Ñ delay Ð°Ð½Ð¸Ð¼Ð°ÑÐ¸Ð¸ Ð¸ endDelay.\r\n     */\r\n    setChange(value) {\r\n        this.options['change'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {function} value Ð¾Ð±ÑÐ°ÑÐ½ÑÐ¹ Ð²ÑÐ·Ð¾Ð² Ð·Ð°Ð¿ÑÑÐºÐ°ÐµÑÑÑ ÐºÐ°Ð¶Ð´ÑÐ¹ ÑÐ°Ð·, ÐºÐ¾Ð³Ð´Ð° Ð°Ð½Ð¸Ð¼Ð°ÑÐ¸Ñ Ð½Ð°ÑÐ¸Ð½Ð°ÐµÑ Ð¼ÐµÐ½ÑÑÑÑÑ.\r\n     * @see change\r\n     */\r\n    setChangeBegin(value) {\r\n        this.options['changeBegin'] = value\r\n        return this\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {function} value  callback is triggered everytime the animation stops changing.\r\n     * @see change\r\n     */\r\n    setChangeComplete(value) {\r\n        this.options['changeComplete'] = value\r\n        return this\r\n    }\r\n\r\n\r\n    toString() {\r\n        return Object.entries(this.options).toString()\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://default/./src/js/components/OptionsAnime.js?");

/***/ }),

/***/ "./src/js/components/aboutUsAnimations.js":
/*!************************************************!*\
  !*** ./src/js/components/aboutUsAnimations.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! animejs/lib/anime.es.js */ \"./node_modules/animejs/lib/anime.es.js\");\n/* harmony import */ var _OptionsAnime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OptionsAnime */ \"./src/js/components/OptionsAnime.js\");\n\r\n\r\n\r\nlet iconsFromHeaderCard = document.querySelector('.card__header')\r\nlet obs = new IntersectionObserver((entries,observer) => {\r\n\r\n    entries.forEach(entr=>{\r\n        let anim =  (0,animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(new _OptionsAnime__WEBPACK_IMPORTED_MODULE_1__.OptionsAnime().setTargets(iconsFromHeaderCard.querySelectorAll('svg path'))\r\n            .setAnimeProperty('strokeDashoffset',[animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setDashoffset,0])\r\n            .setDuration(2000)\r\n            // .setLoop(true)\r\n            .setDelay(animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stagger(1000))\r\n            .setBegin((an)=>{\r\n                an.animatables.forEach(targetAnimEl=>{\r\n                    targetAnimEl.target.setAttribute('fill','rgba(20,34,81,0)')\r\n                    targetAnimEl.target.setAttribute('stroke','#142251')\r\n                })\r\n            })\r\n            .setEasing(_OptionsAnime__WEBPACK_IMPORTED_MODULE_1__.EASING.linear)\r\n            .setComplete((an=>{\r\n                an.animatables.forEach(targetAnimEl=>{\r\n                    targetAnimEl.target.setAttribute('fill','rgb(20,34,81)')\r\n                })\r\n            }))\r\n            .options\r\n        )\r\n        if(entr.isIntersecting){\r\n            anim.play()\r\n        }\r\n        if(entr.intersectionRatio === 0.0){\r\n            anim.reset()\r\n        }\r\n    })\r\n})\r\n\r\nobs.observe(iconsFromHeaderCard)\r\n\r\n\r\n\n\n//# sourceURL=webpack://default/./src/js/components/aboutUsAnimations.js?");

/***/ }),

/***/ "./src/js/components/burger.js":
/*!*************************************!*\
  !*** ./src/js/components/burger.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ initBurgerEffect; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/js/components/constants.js\");\n\r\n\r\n/**\r\n * @description add click of event on #burger\r\n * @description 1 click add class menu__tachBord+addClassForEffect.active.disable scroll document.body.\r\n * @description 2 click remove class menu__tachBord+addClassForEffect.active.\r\n * @description allow scroll document.body.\r\n * @see addClassForEffect\r\n */\r\nfunction initBurgerEffect(){\r\n    let burgerButton = document.querySelector('#burger')\r\n    if(burgerButton){\r\n        burgerButton.addEventListener('click', (e) => {\r\n            let statusAddClass = e.currentTarget.classList.toggle(\"menu__tachBord\" + _constants__WEBPACK_IMPORTED_MODULE_0__.EFFECT_CLASS.active)\r\n            statusAddClass ? document.body.style.overflow = \"hidden\" : document.body.style.overflow = \"auto\";\r\n            e.preventDefault()\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://default/./src/js/components/burger.js?");

/***/ }),

/***/ "./src/js/components/constants.js":
/*!****************************************!*\
  !*** ./src/js/components/constants.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CLASS_ANIM: function() { return /* binding */ CLASS_ANIM; },\n/* harmony export */   EFFECT_CLASS: function() { return /* binding */ EFFECT_CLASS; }\n/* harmony export */ });\n\r\nlet EFFECT_CLASS = {\r\n    active:'_active',\r\n    close:'_close'\r\n}\r\nconst CLASS_ANIM={\r\n    'opacity':'opacity_show',\r\n    'appear':'appear_active'\r\n}\r\n\n\n//# sourceURL=webpack://default/./src/js/components/constants.js?");

/***/ }),

/***/ "./src/js/components/main-svg-animation.js":
/*!*************************************************!*\
  !*** ./src/js/components/main-svg-animation.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ initMainSvgAnimation; }\n/* harmony export */ });\n/* harmony import */ var animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! animejs/lib/anime.es.js */ \"./node_modules/animejs/lib/anime.es.js\");\n\r\n\r\n\r\n/**\r\n * @description set animation in svg with id = #main-svg.\r\n * @depended anime.js\r\n * @see anime\r\n */\r\nfunction  initMainSvgAnimation(){\r\n\r\n    /**\r\n     * animation point for svg - main-svg\r\n     */\r\n    (0,animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\r\n        targets:'#main-svg .point' ,\r\n        translateX: 360,\r\n        translateY: 208,\r\n        easing: 'linear',\r\n        direction: 'alternate',\r\n        duration: 2000,\r\n        loop: true,\r\n        delay: function(el, i, l) {\r\n\r\n            return (l - i) * 100;\r\n        },\r\n        endDelay: function(el, i, l) {\r\n            return (l - i) * 100;\r\n        }\r\n    })\r\n\r\n\r\n    /**\r\n     * add anim for #main-svg #circle-icons > g\r\n     */\r\n    let circleIcons = document.querySelectorAll('#main-svg #circle-icons > g')\r\n    let circleIconsTimeLine =  animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].timeline({\r\n        easing:'easeInQuad',\r\n        loop:true,\r\n        duration: 1000,\r\n        direction:'alternate',\r\n        endDelay:200\r\n    })\r\n\r\n    circleIcons.forEach((v,i)=>{\r\n        let anime_blanks = {\r\n            '0':{\r\n                targets:v,\r\n                translateX:-28,\r\n                translateY:54\r\n            },\r\n            '1':{\r\n                targets:v,\r\n                translateX:71,\r\n                translateY:18,\r\n            },\r\n            '2':{\r\n                targets:v,\r\n                translateX:16,\r\n                translateY:65,\r\n            },\r\n            '3':{\r\n                targets:v,\r\n                translateX: [\r\n                    { value: 3,duration: 1000 , delay: 300 },\r\n                    { value: -125, duration: 1000 , delay: 300 }\r\n                ],\r\n                translateY: [\r\n                    { value: 132,duration: 1000 , delay: 300 },\r\n                    { value: 164, duration: 1000 ,delay: 300},\r\n\r\n                ],\r\n            },\r\n            '4':{\r\n                targets:circleIcons[4],\r\n                translateX:-78,\r\n                translateY:-12,\r\n            },\r\n        }\r\n\r\n        circleIconsTimeLine.add(anime_blanks[i+''] || {} )\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://default/./src/js/components/main-svg-animation.js?");

/***/ }),

/***/ "./src/js/components/polaroidAnimation.js":
/*!************************************************!*\
  !*** ./src/js/components/polaroidAnimation.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ polaroidAnimation; }\n/* harmony export */ });\n/* harmony import */ var animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! animejs/lib/anime.es.js */ \"./node_modules/animejs/lib/anime.es.js\");\n/* harmony import */ var _OptionsAnime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OptionsAnime */ \"./src/js/components/OptionsAnime.js\");\n\r\n\r\n/**\r\n * @param {string} svgID format id DOM - #<id>\r\n */\r\nfunction  polaroidAnimation(svgID){\r\n\r\n    let startColor = '#F2F3F8'\r\n    let endColor ='#142251'\r\n\r\n    let test = (timeLine)=>{\r\n        document.body.querySelector(svgID).querySelectorAll('#person-container>g').forEach((el,index)=>{\r\n            timeLine.add(\r\n                new _OptionsAnime__WEBPACK_IMPORTED_MODULE_1__.OptionsAnime()\r\n                    .setAnimeProperty('fill',[startColor,endColor])\r\n                    .setDirection('alternate')\r\n                    .setTargets(el.querySelectorAll('path'))\r\n                    .setEasing('easeInOutSine')\r\n                    .options,\r\n                1000+index*300\r\n            )\r\n        })\r\n        return timeLine\r\n    }\r\n\r\n    let timeLine = animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].timeline( new _OptionsAnime__WEBPACK_IMPORTED_MODULE_1__.OptionsAnime().setDuration(3000)\r\n        .setDelay(300)\r\n        .setLoop(true).options )\r\n        .add( new _OptionsAnime__WEBPACK_IMPORTED_MODULE_1__.OptionsAnime()\r\n            .setTargets(svgID+' #person-container>g')\r\n            .setAnimeProperty('translateX',[\r\n                    new _OptionsAnime__WEBPACK_IMPORTED_MODULE_1__.OptionsAnime()\r\n                        .setAnimeProperty('value',(el,index,len)=>{\r\n                            return index * 80\r\n                        }).options,\r\n                    new _OptionsAnime__WEBPACK_IMPORTED_MODULE_1__.OptionsAnime()\r\n                        .setDelay(1000)\r\n                        .setAnimeProperty('value',(el,index,len)=>{\r\n                            if(len-1 === index){\r\n                                return 0\r\n                            }\r\n                            return -(el.getBoundingClientRect().width)\r\n                        }).options\r\n                ])\r\n            .setEasing('linear')\r\n            .setLoop(false)\r\n            .options)\r\n    test(timeLine).add(\r\n        new _OptionsAnime__WEBPACK_IMPORTED_MODULE_1__.OptionsAnime()\r\n            .setTargets(svgID+' #person-container>g path')\r\n            .setEasing('linear')\r\n            .setAnimeProperty('fill',[ endColor,startColor])\r\n            .options\r\n    ,'-=300')\r\n}\r\n\r\n\r\npolaroidAnimation('#polaroid')\n\n//# sourceURL=webpack://default/./src/js/components/polaroidAnimation.js?");

/***/ }),

/***/ "./src/js/components/xlsxTable.js":
/*!****************************************!*\
  !*** ./src/js/components/xlsxTable.js ***!
  \****************************************/
/***/ (function() {

eval("\n\n//# sourceURL=webpack://default/./src/js/components/xlsxTable.js?");

/***/ }),

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_burger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/burger */ \"./src/js/components/burger.js\");\n/* harmony import */ var _components_main_svg_animation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/main-svg-animation */ \"./src/js/components/main-svg-animation.js\");\n\r\n\r\n\r\n(0,_components_burger__WEBPACK_IMPORTED_MODULE_0__[\"default\"])()\r\n;(0,_components_main_svg_animation__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\n\n//# sourceURL=webpack://default/./src/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("./src/js/main.js");
/******/ 	__webpack_require__("./src/js/components/aboutUsAnimations.js");
/******/ 	__webpack_require__("./src/js/components/burger.js");
/******/ 	__webpack_require__("./src/js/components/constants.js");
/******/ 	__webpack_require__("./src/js/components/main-svg-animation.js");
/******/ 	__webpack_require__("./src/js/components/OptionsAnime.js");
/******/ 	__webpack_require__("./src/js/components/polaroidAnimation.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/components/xlsxTable.js");
/******/ 	
/******/ })()
;